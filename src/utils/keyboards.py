from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram import Bot
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.utils.markdown import hlink
# –ü–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∞—Å—Å—ã
from .callbacks import PublishLinkCallbackData, ReminderCallbackData, UserStatsCallbackData, LinkCallbackData
from src.db.models import Link # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –º–æ–¥–µ–ª—å Link
from src.config import settings
from typing import Optional, Dict

class LinkCallbackFactory(CallbackData, prefix="link_action"):
    """–§–∞–±—Ä–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–ª–±–µ–∫–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ —Å—Å—ã–ª–∫–∞–º–∏."""
    action: str # –î–µ–π—Å—Ç–≤–∏–µ: 'get'
    link_id: int # ID —Å—Å—ã–ª–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö


def get_link_keyboard(link_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É' –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ link_id."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É",
                callback_data=LinkCallbackData(action="get", link_id=link_id).pack()
            )
        ]
    ])
    return keyboard


# --- –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏ --- #

def format_link_message_with_button(link: Link) -> tuple[str, InlineKeyboardMarkup]:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∞–Ω–æ–Ω—Å–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É'."""

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_parts = []
    if link.event_time_str:
        message_parts.append(f"**{link.event_time_str}**") # –í—Ä–µ–º—è –∂–∏—Ä–Ω—ã–º
    if link.announcement_text:
        message_parts.append(link.announcement_text)
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∞–Ω–æ–Ω—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º URL –∫–∞–∫ –±–∞–∑–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        message_parts.append(hlink("–°—Å—ã–ª–∫–∞", link.link_url))

    message_text = "\n".join(message_parts)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    builder = InlineKeyboardBuilder()
    button_text = "üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É"
    # –î–æ–±–∞–≤–ª—è–µ–º URL –ø—Ä—è–º–æ –≤ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è get_link, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∞–Ω–æ–Ω—Å–∞?
    # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –≤—Å–µ–≥–¥–∞?
    # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç.

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º LinkCallback –¥–ª—è –∫–Ω–æ–ø–∫–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è ID –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏ Link
    builder.button(
        text=button_text,
        callback_data=LinkCallbackData(action="get_link", link_id=link.id).pack()
    )
    reply_markup = builder.as_markup()

    return message_text, reply_markup

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä --- #

def create_publish_keyboard(link_id: int) -> Optional[InlineKeyboardMarkup]:
    """–°–æ–∑–¥–∞–µ—Ç –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ ANNOUNCEMENT_TARGET_CHATS –Ω–µ –ø—É—Å—Ç
    if not settings.ANNOUNCEMENT_TARGET_CHATS or not isinstance(settings.ANNOUNCEMENT_TARGET_CHATS, dict):
        # logger.warning("ANNOUNCEMENT_TARGET_CHATS –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏–ª–∏ –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç.") # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ª—É—á—à–µ –¥–µ–ª–∞—Ç—å –≤ —Ö–µ–Ω–¥–ª–µ—Ä–µ
        return None

    builder = InlineKeyboardBuilder()
    for chat_name, chat_id_str in settings.ANNOUNCEMENT_TARGET_CHATS.items():
        try:
            chat_id = int(chat_id_str) # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º ID —á–∞—Ç–∞ –≤ int
            builder.button(
                text=f"–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ '{chat_name}'", # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∫–∞–≤—ã—á–∫–∏
                callback_data=PublishLinkCallbackData(link_id=link_id, chat_id=chat_id)
            )
        except ValueError:
            # logger.error(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç chat_id '{chat_id_str}' –¥–ª—è —á–∞—Ç–∞ '{chat_name}' –≤ ANNOUNCEMENT_TARGET_CHATS.")
            continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –∫–Ω–æ–ø–∫—É

    # –ï—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∞ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞, —Å—Ç—Ä–æ–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    if builder.buttons:
        builder.adjust(1) # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Å—Ç—Ä–æ–∫–µ
        return builder.as_markup()
    else:
        return None
