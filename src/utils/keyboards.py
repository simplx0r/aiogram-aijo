from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.utils.markdown import hlink
# –ü–æ–≤—Ç–æ—Ä–Ω–æ –∏—Å–ø—Ä–∞–≤–ª—è–µ–º –∏–º–ø–æ—Ä—Ç, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –æ–Ω —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ–ª—å–∫–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–ª–∞—Å—Å—ã
from .callback_data import ChatSelectCallback, LinkCallbackFactory
from src.db.models import Link # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–ø—Ä—è–º—É—é –º–æ–¥–µ–ª—å Link
from src.config import settings

def get_link_keyboard(link_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É' –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ link_id."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É",
                callback_data=LinkCallbackFactory(action="get", link_id=link_id).pack()
            )
        ]
    ])
    return keyboard


# --- –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏ --- #

def format_link_message_with_button(link: Link) -> tuple[str, InlineKeyboardMarkup]:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∞–Ω–æ–Ω—Å–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É'."""

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_parts = []
    if link.event_time_str:
        message_parts.append(f"**{link.event_time_str}**") # –í—Ä–µ–º—è –∂–∏—Ä–Ω—ã–º
    if link.announcement_text:
        message_parts.append(link.announcement_text)
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∞–Ω–æ–Ω—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º URL –∫–∞–∫ –±–∞–∑–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        message_parts.append(hlink("–°—Å—ã–ª–∫–∞", link.link_url))

    message_text = "\n".join(message_parts)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    builder = InlineKeyboardBuilder()
    button_text = "üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É"
    # –î–æ–±–∞–≤–ª—è–µ–º URL –ø—Ä—è–º–æ –≤ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è get_link, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∞–Ω–æ–Ω—Å–∞?
    # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –≤—Å–µ–≥–¥–∞?
    # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç.

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º LinkCallbackFactory –¥–ª—è –∫–Ω–æ–ø–∫–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è ID –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏ Link
    builder.button(
        text=button_text,
        callback_data=LinkCallbackFactory(action="get", link_id=link.id).pack()
    )
    reply_markup = builder.as_markup()

    return message_text, reply_markup

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä --- #

def create_publish_keyboard(link_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏."""
    builder = InlineKeyboardBuilder()

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∏–º—è –∞—Ç—Ä–∏–±—É—Ç–∞ (–Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä)
    target_chats = settings.announcement_target_chats

    if not target_chats or not isinstance(target_chats, dict):
        # logger.warning("–°–ª–æ–≤–∞—Ä—å announcement_target_chats –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö.")
        # –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏–ª–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –æ–± –æ—à–∏–±–∫–µ
        # builder.button(text="–û—à–∏–±–∫–∞: –ß–∞—Ç—ã –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã", callback_data="error:no_chats")
        return builder.as_markup() # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    for chat_name, chat_id in target_chats.items():
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º ChatSelectCallback
        callback_data = ChatSelectCallback(
            link_id=link_id, target_chat_id=chat_id
        )
        builder.button(
            text=f"‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ '{chat_name}'",
            callback_data=callback_data.pack()
        )

    # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=LinkCallbackFactory(action="cancel_publish", link_id=link_id).pack())
    builder.adjust(1) # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Ä—è–¥—É
    return builder.as_markup()
