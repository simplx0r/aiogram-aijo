from aiogram.filters.callback_data import CallbackData
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.utils.markdown import hlink
from .callback_data import LinkCallback, ChatSelectCallback
from src.db.models import Link


class LinkCallbackFactory(CallbackData, prefix="link_action"):
    """–§–∞–±—Ä–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ–ª–±–µ–∫–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ —Å—Å—ã–ª–∫–∞–º–∏."""
    action: str # –î–µ–π—Å—Ç–≤–∏–µ: 'get'
    link_id: int # ID —Å—Å—ã–ª–∫–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö


def get_link_keyboard(link_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É' –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ link_id."""
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É",
                callback_data=LinkCallbackFactory(action="get", link_id=link_id).pack()
            )
        ]
    ])
    return keyboard


# --- –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–∫–∏ --- #

def format_link_message_with_button(link: Link) -> tuple[str, InlineKeyboardMarkup]:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∞–Ω–æ–Ω—Å–∞ –∏ —Å–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É'."""

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_parts = []
    if link.event_time_str:
        message_parts.append(f"**{link.event_time_str}**") # –í—Ä–µ–º—è –∂–∏—Ä–Ω—ã–º
    if link.announcement_text:
        message_parts.append(link.announcement_text)
    else:
        # –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∞–Ω–æ–Ω—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º URL –∫–∞–∫ –±–∞–∑–æ–≤—ã–π —Ç–µ–∫—Å—Ç
        message_parts.append(hlink("–°—Å—ã–ª–∫–∞", link.link_url))

    message_text = "\n".join(message_parts)

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
    builder = InlineKeyboardBuilder()
    button_text = "üîó –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É"
    # –î–æ–±–∞–≤–ª—è–µ–º URL –ø—Ä—è–º–æ –≤ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ –¥–ª—è get_link, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–µ–∫—Å—Ç–∞ –∞–Ω–æ–Ω—Å–∞?
    # –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç –≤—Å–µ–≥–¥–∞?
    # –ü–æ–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç–µ–∫—Å—Ç.

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º LinkCallback –¥–ª—è –∫–Ω–æ–ø–∫–∏, –ø–µ—Ä–µ–¥–∞–≤–∞—è ID –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏ Link
    builder.button(
        text=button_text,
        callback_data=LinkCallback(action="get_link", link_id=link.id).pack()
    )
    reply_markup = builder.as_markup()

    return message_text, reply_markup

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä --- #
