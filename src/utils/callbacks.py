from aiogram.filters.callback_data import CallbackData
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery
import logging

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–µ—Ä–≤–∏—Å—ã –∏ —Ö–µ–Ω–¥–ª–µ—Ä—ã
from src.services.link_service import get_link_by_id as db_get_link_by_id, mark_link_published
# –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω –≤–Ω—É—Ç—Ä—å —Ö–µ–Ω–¥–ª–µ—Ä–∞, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
# from src.handlers.links import _send_announcement_to_group

logger = logging.getLogger(__name__)

router = Router() # –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∫–æ–ª–±—ç–∫–æ–≤

class PublishLinkCallbackData(CallbackData, prefix="publish_link"):
    link_id: int
    chat_id: int # –ò—Å–ø–æ–ª—å–∑—É–µ–º chat_id –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏, —Ç.–∫. CallbackData –Ω–µ –ª—é–±–∏—Ç —Å—Ç—Ä–æ–∫–∏ —Å –ø—Ä–æ–±–µ–ª–∞–º–∏

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–π –∫–ª–∞—Å—Å –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å—Å—ã–ª–∫–∏
class LinkCallbackData(CallbackData, prefix="link"):
    action: str # –Ω–∞–ø—Ä–∏–º–µ—Ä, 'get_link', 'delete_link'
    link_id: int

class ReminderCallbackData(CallbackData, prefix="reminder"):
    action: str
    link_id: int

class UserStatsCallbackData(CallbackData, prefix="user_stats"):
    user_id: int
    action: str # –Ω–∞–ø—Ä–∏–º–µ—Ä, 'view_messages'

@router.callback_query(PublishLinkCallbackData.filter())
async def publish_link_callback_handler(query: CallbackQuery, callback_data: PublishLinkCallbackData, bot: Bot):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å—Å—ã–ª–∫–∏."""
    # –û—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ä–∞–∑—Ä—ã–≤–∞ —Ü–∏–∫–ª–∞
    from src.handlers.links import _send_announcement_to_group

    link_id = callback_data.link_id
    target_chat_id = callback_data.chat_id
    user_id = query.from_user.id

    logger.info(f"User {user_id} initiated publication of link {link_id} to chat {target_chat_id}")

    # 1. –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –∏–∑ –ë–î
    link = await db_get_link_by_id(link_id)
    if not link:
        logger.warning(f"Link {link_id} not found for publication by user {user_id}.")
        await query.answer("–û—à–∏–±–∫–∞: –°—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!", show_alert=True)
        # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
        try:
            await query.message.edit_reply_markup(reply_markup=None)
        except Exception:
            pass # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        return

    if not link.pending:
        logger.warning(f"Link {link_id} is already published or processed, attempted by user {user_id}.")
        await query.answer("–≠—Ç–∞ —Å—Å—ã–ª–∫–∞ —É–∂–µ –±—ã–ª–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞.", show_alert=True)
        try:
            await query.message.edit_text(f"üîó –°—Å—ã–ª–∫–∞ –Ω–∞ '{link.link_url}' —É–∂–µ –±—ã–ª–∞ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞.", reply_markup=None)
        except Exception:
            pass
        return

    # 2. –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –≤—ã–±—Ä–∞–Ω–Ω—É—é –≥—Ä—É–ø–ø—É
    sent_message = await _send_announcement_to_group(bot, link, target_chat_id)

    if sent_message:
        # 3. –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —É—Å–ø–µ—à–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Å—ã–ª–∫–∏ –≤ –ë–î
        publish_success = await mark_link_published(
            link_id=link_id,
            message_id=sent_message.message_id,
            chat_id=sent_message.chat.id
        )

        if publish_success:
            logger.info(f"Successfully published link {link_id} to chat {target_chat_id} by user {user_id}")
            await query.answer("‚úÖ –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ!", show_alert=False)
            # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            try:
                # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–º—è —á–∞—Ç–∞ –¥–ª—è –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                chat_info = await bot.get_chat(target_chat_id)
                chat_title = chat_info.title or f"—á–∞—Ç {target_chat_id}"
            except Exception:
                chat_title = f"—á–∞—Ç {target_chat_id}"

            try:
                await query.message.edit_text(
                    f"‚úÖ –°—Å—ã–ª–∫–∞ –Ω–∞ '{link.link_url}' –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ {chat_title}.",
                    reply_markup=None # –£–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
                )
            except Exception as edit_err:
                logger.error(f"Failed to edit original message after publishing link {link_id}: {edit_err}")
        else:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ –±—ã–ª–∞, –Ω–æ –ë–î –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å - –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
            logger.error(f"CRITICAL: Sent message for link {link_id} to {target_chat_id}, but FAILED to mark as published in DB! Manual check required.")
            await query.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –Ω–æ —Å—Ç–∞—Ç—É—Å —Å—Å—ã–ª–∫–∏ –≤ –±–∞–∑–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω! –°–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.", show_alert=True)
            # –ù–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–∞–∫ –µ—Å—Ç—å

    else:
        # 4. –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å
        logger.error(f"Failed to send announcement for link {link_id} to chat {target_chat_id} by user {user_id}.")
        await query.answer("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç.", show_alert=True)
        # –ú–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å—Ç–∞–≤–∏–≤ –∫–Ω–æ–ø–∫–∏
        try:
            await query.message.edit_text(
                f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ '{link.link_url}' –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π.",
                reply_markup=query.message.reply_markup # –û—Å—Ç–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
            )
        except Exception:
            pass # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
